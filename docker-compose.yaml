services:
  node:
    image: ${FULL_IMAGE_TAG}
    build:
      context: ./node
      target: ${DEFAULT_BUILD_TARGET}
    # image: ${DOCKERHUB_NAMESPACE}/${IMAGE_PREFIX}-node # only needs this if always uses :latest
    working_dir: /app
    entrypoint: ["dumb-init", "--"]  # âœ… explicitly set entrypoint
    stdin_open: true
    tty: true
    volumes:
      - ${HOST_WORKDIR:-.}:/app
      - /app/node_modules
    ports:
      - ${PORT_MAPPINGS:-3000:80}  # ðŸ‘ˆ dynamic with fallback
    command: ["sh", "-i"]

  python:
    build:
      context: ./python
    image: ${DOCKERHUB_NAMESPACE}/${IMAGE_PREFIX}-python
    working_dir: /app
    stdin_open: true
    tty: true
    volumes:
      - ${HOST_WORKDIR:-.}:/app

  arch:
    build:
      context: ./arch
    image: ${DOCKERHUB_NAMESPACE}/${IMAGE_PREFIX}-arch
    working_dir: /mnt
    stdin_open: true
    tty: true
    volumes:
      - ${HOST_WORKDIR:-.}:/mnt
      - /var/run/docker.sock:/var/run/docker.sock  # enable docker passthru

  debian:
    build:
      context: ./debian
    image: ${DOCKERHUB_NAMESPACE}/${IMAGE_PREFIX}-debian
    working_dir: /mnt
    stdin_open: true
    tty: true
    volumes:
      - ${HOST_WORKDIR:-.}:/mnt
      - /var/run/docker.sock:/var/run/docker.sock  # enable docker passthru

