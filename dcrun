#!/bin/bash

# 📍 Resolve absolute path to this script
SOURCE="${BASH_SOURCE[0]:-$0}"
while [ -h "$SOURCE" ]; do
  DIR="$(cd -P "$(dirname "$SOURCE")" >/dev/null 2>&1 && pwd)"
  SOURCE="$(readlink "$SOURCE")"
  [[ "$SOURCE" != /* ]] && SOURCE="$DIR/$SOURCE"
done
REPO_DIR="$(cd -P "$(dirname "$SOURCE")" >/dev/null 2>&1 && pwd)"

# 🔗 Load helpers
source "${REPO_DIR}/helpers.sh"

# 🔗 Load env vars (DOCKERHUB_NAMESPACE, IMAGE_PREFIX)
if [[ -f "${REPO_DIR}/.env" ]]; then
  source "${REPO_DIR}/.env"
else
  echo "❌ Missing .env file at ${REPO_DIR}/.env"
  exit 1
fi

# 🚀 Run an ephemeral container
_parse_args "$@" || exit $?

# Create full image name
image="${DOCKERHUB_NAMESPACE}/${IMAGE_PREFIX}-${SERVICE}:${IMAGE_TAG}"

# export for docker-compose.yaml
export FULL_IMAGE_TAG="${image}"  # 👈 makes it available to docker compose

if [[ -z "$REQUESTED_SHELL" ]]; then
  echo "❌ You must provide a shell to run (e.g. sh, bash, zsh)"
  exit 1
fi

_validate_shell "$image" "$REQUESTED_SHELL" || {
  echo "❌ Shell '$REQUESTED_SHELL' not found in image: $image"
  exit 1
}

# Handle optional port overrides
COMPOSE_OVERRIDES_FILE=""
if [[ "${#USER_PORTS[@]}" -gt 0 ]]; then
  COMPOSE_OVERRIDES_FILE="${REPO_DIR}/.compose.override.ports.yaml"

  echo "💡 Overriding ports for service '$SERVICE':"
  for p in "${USER_PORTS[@]}"; do
    echo "  - $p"
  done

  cat > "$COMPOSE_OVERRIDES_FILE" <<EOF
services:
  ${SERVICE}:
    ports:
EOF

  for p in "${USER_PORTS[@]}"; do
    echo "      - \"$p\"" >> "$COMPOSE_OVERRIDES_FILE"
  done
fi

# Need this for docker-compose.yaml in --file option below
export HOST_WORKDIR="$(pwd)"
echo "🚀 Running: $image with shell: $REQUESTED_SHELL, in this location: $HOST_WORKDIR"

docker compose \
  --file "${REPO_DIR}/docker-compose.yaml" \
  $( [[ -n "$COMPOSE_OVERRIDES_FILE" ]] && echo "--file $COMPOSE_OVERRIDES_FILE" ) \
  run \
  --rm \
  --interactive \
  --tty \
  --service-ports \
  "${SERVICE}" "$REQUESTED_SHELL"

# 🧹 Clean up override file
[[ -n "$COMPOSE_OVERRIDES_FILE" ]] && rm -f "$COMPOSE_OVERRIDES_FILE"

